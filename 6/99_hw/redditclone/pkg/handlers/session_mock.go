// Code generated by MockGen. DO NOT EDIT.
// Source: user.go

// Package handlers is a generated GoMock package.
package handlers

import (
	"redditclone/pkg/session"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSessionManager is a mock of SessionManager interface
type MockSessionManager struct {
	ctrl     *gomock.Controller
	recorder *MockSessionManagerMockRecorder
}

// MockSessionManagerMockRecorder is the mock recorder for MockSessionManager
type MockSessionManagerMockRecorder struct {
	mock *MockSessionManager
}

// NewMockSessionManager creates a new mock instance
func NewMockSessionManager(ctrl *gomock.Controller) *MockSessionManager {
	mock := &MockSessionManager{ctrl: ctrl}
	mock.recorder = &MockSessionManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSessionManager) EXPECT() *MockSessionManagerMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockSessionManager) Create(userId string) (*session.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", userId)
	ret0, _ := ret[0].(*session.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockSessionManagerMockRecorder) Create(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSessionManager)(nil).Create), userId)
}

// Check mocks base method
func (m *MockSessionManager) Check(sessionId string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Check", sessionId)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Check indicates an expected call of Check
func (mr *MockSessionManagerMockRecorder) Check(sessionId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockSessionManager)(nil).Check), sessionId)
}

// GetUserIdBySessionId mocks base method
func (m *MockSessionManager) GetUserIdBySessionId(sessionId string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserIdBySessionId", sessionId)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserIdBySessionId indicates an expected call of GetUserIdBySessionId
func (mr *MockSessionManagerMockRecorder) GetUserIdBySessionId(sessionId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserIdBySessionId", reflect.TypeOf((*MockSessionManager)(nil).GetUserIdBySessionId), sessionId)
}
